= Környezetbarát Egységtesztelés Meztelencsigákkal =

avagy, hogyan gyártsunk Egységtesztelős programot a *Yii*-vel.

== Mi ez? ==

Ha netán a címből nem lenne eléggé egyértelmű, a következőkben Egységteszetkről lesz szó PHP-s környezetben. Ha a nyájas olvasó még nem olvasta a korábban megjelent [http://weblabor.hu/cikkek/wiki-a-la-yii Yiiki al'a Yii] cikket, és semmilyen tapasztalata nincs a Yii keretrendszerrel, mindenképp érdemes rajta átfutni ugyanis itt nem fogunk belemenni az alapvető, _-Na most akkor, hogy is kezdjem?_ kérdésekbe.

== Mi lesz ez? ==

Egy nagyon egyszerű URL rövidítőt fogunk késziteni, mint pl a http://tinyurl.com vagy a http://vurl.me. Ha valaki nem ismerné, a lényeg az, hogy marha hosszú URL-eket lekicsinyítünk, és ha valahol egy felhasználó az általunk lekicsinyített linkre (slug, innen a név ;) ) kattint, azt továbbítjuk a megfelelő oldalra.

== Bevezetés ==

=== Fogalmak: ===

*Test Driven Development (TDD)* - Tesztelésen alapuló fejlesztés.

Ezt talán úgy lehetne a legegyszerűbben bemutatni, hogy képzeljünk el egy adott problémát és próbáljuk meg visszafelé megoldani. Oké, lehet, hogy ez így elsőre hülyén hangzik, de talán ez az ábra segíthet.

http://mehesz.net/downloads/ttd.png

 # Írjunk tesztet
 # Ellenőrizzük, hogy a tesztünk hibázik (*FAIL*)
 # Írjuk meg (a legegyszerűbben!) a kívánt kódot úgy, hogy a tesztünk sikeres legyen.
 # Nézzük meg, hogy a tesztünk sikeres e (*PASS*)
 # Módosítsuk a kódunkat (úgy, hogy a teszt mindig sikeres maradjon!)
 # Kezdjük előlről az egészet.

Ez elsőre, másodikra de talán még harmadikra is érdekesen hangozhat, de reméljük a cikk végén minden világos lesz.

*Unit Test* - Egységteszt.

Az egységek, komponensek tesztelése, hogy megbizonyosodjunk a működésének helyességéről. Cél, hogy feltárja nincsenek-e tévműködések, feltáratlan hibák a belső algoritmusban, adatkezelésben. A komponensek más rendszer komponensektől függetlenül vannak tesztelve. /az implementáló feladata, felelőssége/

(http://www.dcs.vein.hu/)

(ja, itt ajánlanám [http://weblabor.hu/konyvek/test-driven-development-by-example Török Gábor] írását.) 

http://code.google.com/images/code_sm.png

= Introduction =

_"Ismeret az nem cselekedet, csakis cselekedet a cselekedet"_ - tdc10

= Táblák =

{{{
++++++++++++++++++++++++++
+ urls                   +
++++++++++++++++++++++++++
+ id INT (auto_increment)+
+ url TEXT               +
+ slug VARCHAR(50)       +
+ created INT            +
++++++++++++++++++++++++++
}}}

*SQLite3*
{{{
CREATE TABLE urls (created INTEGER, id INTEGER PRIMARY KEY AUTOINCREMENT, slug varchar(50), url TEXT);
}}}

_protected/config/main.php_
{{{
...
  'connectionString' => 'sqlite:'.dirname(__FILE__).'/../data/rovidke.db',
...
}}}

(iras jog!)
{{{
CDbCommand failed to execute the SQL statement: SQLSTATE[HY000]: General error: 8 attempt to write a readonly database
}}}

{{{
./protected/yiic shell
Yii Interactive Tool v1.1 (based on Yii v1.1.3)
Please type 'help' for help. Type 'exit' to quit.
>> _
}}}

{{{
>> model Url urls
   generate models/Url.php
   generate fixtures/urls.php
   generate unit/UrlTest.php

The following model classes are successfully generated:
    Url

If you have a 'db' database connection, you can test these models now with:
    $model=Url::model()->find();
    print_r($model);
>>
}}}

_protected/tests/_

{{{
$phpunit unit
...
There was 1 error:

1) testCreate(UrlTest)
CDbException: The table "urls" for active record class "Url" cannot be found in the database.
...
}}}

_protected/config/test.php_
{{{
...
 'connectionString'=>'sqlite:' . dirname(__FILE__).'/../rovidke_test.db',
...
}}}


_protected/tests/_
{{{
$phpunit unit
PHPUnit 3.3.16 by Sebastian Bergmann.

.

Time: 0 seconds

OK (1 test, 0 assertions)
}}}

_protected/tests/unit/UrlTest.php_
{{{
...
    public function testTrue()
    {
        $this->assertTrue( false );
    }

    public function testTrue2()
    {
        $this->assertTrue( true );
    }
...
}}}

_protected/tests/_
{{{
$phpunit unit

PHPUnit 3.3.16 by Sebastian Bergmann.

F.

Time: 0 seconds

There was 1 failure:

1) testTrue(UrlTest)
Failed asserting that <boolean:false> is true.
/var/www/rovidke/protected/tests/unit/UrlTest.php:18

FAILURES!
Tests: 2, Assertions: 2, Failures: 1.

}}}

= Fixtures - Minta Adat =

{{{
return array(
	'sample1'=>array(
		'created' => '1234567890',
		'slug' => 'AA',
		'url' => 'http://weblabor.hu',
	),
	'sample2'=>array(
		'created' => '1234567890',
		'slug' => 'AB',
		'url' => 'http://google.com',
	),
);
}}}

_protected/tests_
{{{
$phpunit unit/
...
  Failed asserting that <integer:2> matches expected value <integer:1>.
...
}}}

{{{
...
    public function testCountAll()
    {
        $urls_count = sizeof(Url::model()->findAll());
        $this->assertEquals( 2, $urls_count );
    }
...
}}}

_protected/tests/unit/UrlTest.php_
{{{
...
    public function testActionView()
    {
        $url = Url::model()->findByAttributes( array( 'id' => 1 ) );

        $this->assertTrue( $url instanceof Url );
        $this->assertEquals( $url->url, 'http://altavizsla.hu' );
    }
...
}}}

_protected/tests/_
{{{
$phpunit unit
...
There was 1 failure:

expected string <http://weblabor.hu>
difference      <       xxxxxxxxxxx??>
got string      <http://altavizsla.hu>
...
}}}

_protected/tests/unit/UrlTest.php_
{{{
...
  $url = Url::model()->findByAttributes( array( 'id' => 2 ) );
...
}}}

_protected/tests/unit/UrlTest.php_
{{{
...
    public function testUrlRequired()
    {
        $this->assertTrue( Url::model()->isAttributeRequired( 'url' ) );
    }
...
}}}

_protected/models/Url.php_
{{{
...
    return array(
       ...
       array( 'url', 'required' ),
       ...
    );
...
}}}

_protected/tests/unit/UrlTest.php_
{{{
...
    public function testSlugRequired()
    {
        $this->assertTrue( Url::model()->isAttributeRequired( 'slug' ) );
    }
...
}}}

_protected/models/Url.php_
{{{
...
    return array(
       ...
       array( 'url,slug', 'required' ),
       ...
    );
...
}}}



_protected/tests/unit/UrlTest.php_
{{{
...
    public function testCreateUrl()
    {
        $url = new Url();
        $url->setAttribute( 'url', 'http://altavista.hu' );
        $this->assertTrue( $url->save(), 'URL tarolas tesztelese' );
        $this->assertEquals( $url->slug, 'AA' );
    }
...
}}}

_protected/models/Url.php_
{{{
    public function beforeValidate()
    {
        $this->shortened = $this->createSlug();
        return parent::beforeValidate();
    }

    public function createSlug()
    {
       return 'AA'; 
    }
}}}

{{{
    public function createSlug()
    {
        $slug = Url::model()->find( array( 'order' => 'slug DESC' ) )->slug;

        if( ! $slug )
        {
            $slug = 'AA';
        }
        else
        {
            ++$slug;
        }

        return $slug; 
    }
}}}

_protected/tests/_
{{{
$phpunit unit/

...
Failed asserting that two strings are equal.
expected string <AC>
difference      < x>
got string      <AA>
...
}}}

_protected/tests/unit/UrlTest.php_
{{{
...
    public function testCreateUrl()
    {
        $url = new Url();
        $url->setAttribute( 'url', 'http://altavista.hu' );
        $this->assertTrue( $url->save(), 'URL tarolas tesztelese' );
        $this->assertEquals( $url->slug, 'AC' );
    }
...
}}}

_protected/models/Url.php_
{{{
...
    public function createSlug()
    {
        $slug = Url::model()->find( array( 'order' => 'slug DESC' ) )->slug;
        return $slug ? ++$slug : 'AA';
    }
...
}}}

_protected/yiic shell_
{{{
>> crud Url
   generate UrlController.php
   generate UrlTest.php
      mkdir /var/www/rovidke/protected/views/url
   generate create.php
   generate update.php
   generate index.php
   generate view.php
   generate admin.php
   generate _form.php
   generate _view.php
   generate _search.php

}}}

_protected/config/main.php_
{{{
...
    'defaultController'    => 'url/create',
...
}}}

_protected/controllers/UrlController.php
{{{
...
			array('allow',  // allow all users to perform 'index' and 'view' actions
				'actions'=>array('index','view', 'create'),
				'users'=>array('*'),
			),
			array('allow', // allow authenticated user to perform 'create' and 'update' actions
				'actions'=>array('update'),
				'users'=>array('@'),
			),
...
}}}

_protected/views/url/_form.php_
{{{
...
    <?php /*
	<div class="row">
		<?php echo $form->labelEx($model,'created'); ?>
		<?php echo $form->textField($model,'created'); ?>
		<?php echo $form->error($model,'created'); ?>
	</div>

	<div class="row">
		<?php echo $form->labelEx($model,'shortened'); ?>
		<?php echo $form->textField($model,'shortened',array('size'=>50,'maxlength'=>50)); ?>
		<?php echo $form->error($model,'shortened'); ?>
	</div>
    */ 
    ?>

	<div class="row">
		<?php echo $form->labelEx($model,'url'); ?>
		<?php echo $form->textField($model,'url', array( 'size' => 50 )); ?>
		<?php echo $form->error($model,'url'); ?>
	</div>
...
}}}

_protected/views/url/view.php_
{{{
...
<?php 
    echo 
        CHtml::link( 
            'http://' . $_SERVER['SERVER_NAME'] . '/' . $model->slug, 
            $this->createUrl( '/' . $model->slug ) 
        );
?>
...
<?php 
/*
$this->widget('zii.widgets.CDetailView', array(
	'data'=>$model,
	'attributes'=>array(
		'created',
		'id',
		'slug',
		'updated',
		'url',
	),
)); 
*/
?>
}}}

_protected/config/main.php_
{{{
...
        'urlManager'=>array(
             'urlFormat'=>'path',
             'showScriptName' => false,
             'rules'=>array(
                 '/<slug:[A-Z]+>' => 'url/redirect',
                 '<controller:\w+>/<id:\d+>'=>'<controller>/view',
                 '<controller:\w+>/<action:\w+>/<id:\d+>'=>'<controller>/<act    ion>',
                 '<controller:\w+>/<action:\w+>'=>'<controller>/<action>',
             ),
         ),
...
}}}

_.htaccess_
{{{
Options +FollowSymLinks
IndexIgnore */*
RewriteEngine on

#Uncomment "RewriteBase /" when you upload this .htaccess to your web server, and comment it when on local web server

#NOTE: 

#If your application is in a folder, for example "application". Then, changing the "application" folder name, will require you to reset the RewriteBase /[your app folder]

#RewriteBase /[your app folder - optional]

# if a directory or a file exists, use it directly
RewriteCond %{REQUEST_FILENAME} -s [OR]
RewriteCond %{REQUEST_FILENAME} -l [OR]
RewriteCond %{REQUEST_FILENAME} -d

# otherwise forward it to index.php 
RewriteRule ^.*$ - [NC,L]
RewriteRule ^.*$ index.php [NC,L]
}}}

_protected/controllers/UrlController.php_
{{{
...
    public function accessRules()
    {
       ...
          array('allow',  // allow all users to perform 'index' and 'view' actions
		  'actions'=>array('index','view','create','redirect'),
		  'users'=>array('*'),
		),    
       ...
    }
...
    public function actionRedirect()
    {
        $slug = Yii::app()->request->getParam( 'slug', null );
        if( $slug )
        {
            $url = Url::model()->findByAttributes( array( 'slug' => $slug ) );
            if( $url )
            {
                $this->redirect( Url::model()->findByAttributes( array( 'slug' => $slug ) )->url );
            }
        }

        throw new CHttpException( '404', 'hmmm ... slug not found!' );
    }
...
}}}
Add your content here.


= Details =

Add your content here.  Format your content with:
  * Text in *bold* or _italic_
  * Headings, paragraphs, and lists
  * Automatic links to other wiki pages